// deno-lint-ignore-file require-await
var _computedKey;
import { matchFilters } from "nostr-tools";
import { Machina } from "../utils/Machina.js";
import { NSet } from "../NSet.js";
_computedKey = Symbol.toStringTag;
/** Mock relay for testing. */ export class MockRelay extends NSet {
  subs = new Map();
  async *req(filters, opts) {
    const uuid = crypto.randomUUID();
    const machina = new Machina(opts?.signal);
    this.subs.set(uuid, {
      filters,
      machina
    });
    try {
      for (const event of (await this.query(filters))){
        yield [
          'EVENT',
          uuid,
          event
        ];
      }
      yield [
        'EOSE',
        uuid
      ];
      for await (const event of machina){
        yield [
          'EVENT',
          uuid,
          event
        ];
      }
    } finally{
      this.subs.delete(uuid);
    }
  }
  async event(event) {
    this.add(event);
    for (const { filters, machina } of this.subs.values()){
      if (matchFilters(filters, event)) {
        machina.push(event);
      }
    }
  }
  async query(filters) {
    const events = [];
    for (const event of this){
      if (matchFilters(filters, event)) {
        this.cache.get(event.id);
        events.push(event);
      }
    }
    return events;
  }
  async remove(filters) {
    for (const event of this){
      if (matchFilters(filters, event)) {
        this.delete(event);
      }
    }
  }
  async count(filters) {
    const events = await this.query(filters);
    return {
      count: events.length,
      approximate: false
    };
  }
  close() {
    return Promise.resolve();
  }
  [_computedKey] = 'MockRelay';
}
//# sourceMappingURL=MockRelay.js.map