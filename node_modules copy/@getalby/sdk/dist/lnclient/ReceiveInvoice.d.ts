import { Invoice } from "@getalby/lightning-tools";
import { Nip47Transaction, NWCClient } from "../nwc";
/**
 * A lightning invoice to be received by your wallet, along with utility functions,
 * such as checking if the invoice was paid and acting upon it.
 */
export declare class ReceiveInvoice {
    readonly transaction: Nip47Transaction;
    readonly invoice: Invoice;
    private _nwcClient;
    private _unsubscribeFunc?;
    private _timeoutFunc?;
    private _timeoutId?;
    constructor(nwcClient: NWCClient, transaction: Nip47Transaction);
    /**
     * Setup an action once the invoice has been paid.
     *
     * @param callback this method will be fired once we register the invoice was paid, with information of the received payment.
     * @returns the current instance for method chaining e.g. add optional timeout
     */
    onPaid(callback: (receivedPayment: Nip47Transaction) => void): ReceiveInvoice;
    /**
     * Setup an action that happens if the invoice is not paid after a certain amount of time.
     *
     * @param seconds the number of seconds to wait for a payment
     * @param callback this method will be called once the timeout is elapsed.
     * @returns the current instance for method
     */
    onTimeout(seconds: number, callback: () => void): ReceiveInvoice;
    /**
     * Manually unsubscribe if you no longer expect the user to pay.
     *
     * This is only needed if no payment was received and no timeout was configured.
     */
    unsubscribe(): void;
    private _onPaidPollingFallback;
}
