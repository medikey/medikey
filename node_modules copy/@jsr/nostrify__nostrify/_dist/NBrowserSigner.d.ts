import type { NostrEvent, NostrSigner } from "@jsr/nostrify__types";
/**
 * NIP-07-compatible signer that proxies to browser extension, normalizing behavior across different implementations.
 *
 * This signer delegates all operations to the browser's `window.nostr` object,
 * which is typically provided by browser extensions like Alby, nos2x, etc.
 *
 * Usage:
 *
 * ```ts
 * const signer = new NBrowserSigner();
 * const pubkey = await signer.getPublicKey();
 * const event = await signer.signEvent({ kind: 1, content: 'Hello, world!', tags: [], created_at: 0 });
 * ```
 */ export declare class NBrowserSigner implements NostrSigner {
  private nostr: any;
  getPublicKey(): Promise<string>;
  signEvent(event: Omit<NostrEvent, 'id' | 'pubkey' | 'sig'>): Promise<NostrEvent>;
  getRelays(): Promise<Record<string, {
    read: boolean;
    write: boolean;
  }>>;
  get nip04(): NostrSigner['nip04'];
  get nip44(): NostrSigner['nip44'];
}
//# sourceMappingURL=NBrowserSigner.d.ts.map