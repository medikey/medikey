import { NBrowserSigner, NConnectSigner, NSecSigner } from "@jsr/nostrify__nostrify";
import { nip19 } from "nostr-tools";
/** Represents a Nostr user with authentication credentials. */ export class NUser {
  method;
  pubkey;
  signer;
  constructor(/** The authentication method used for this user */ method, /** The public key of the user in hex format. */ pubkey, /** The signer that can sign events on behalf of this user. */ signer){
    this.method = method;
    this.pubkey = pubkey;
    this.signer = signer;
  }
  static fromNsecLogin(login) {
    const sk = nip19.decode(login.data.nsec);
    return new NUser(login.type, login.pubkey, new NSecSigner(sk.data));
  }
  static fromBunkerLogin(login, pool) {
    const clientSk = nip19.decode(login.data.clientNsec);
    const clientSigner = new NSecSigner(clientSk.data);
    return new NUser(login.type, login.pubkey, new NConnectSigner({
      relay: pool.group(login.data.relays),
      pubkey: login.pubkey,
      signer: clientSigner,
      timeout: 60_000
    }));
  }
  static fromExtensionLogin(login) {
    return new NUser(login.type, login.pubkey, new NBrowserSigner());
  }
}
//# sourceMappingURL=NUser.js.map