import { NostrSigner, NUploader } from "@jsr/nostrify__types";
/** BlossomUploader options. */ export interface BlossomUploaderOpts {
  /** Blossom servers to use. */ servers: Request['url'][];
  /** Signer for Blossom authorizations. */ signer: NostrSigner;
  /** Custom fetch implementation. */ fetch?: typeof fetch;
  /** Number of milliseconds until each request should expire. (Default: `60_000`) */ expiresIn?: number;
}
/** Upload files to Blossom servers. */ export declare class BlossomUploader implements NUploader {
  private servers: any;
  private signer: any;
  private fetch: any;
  private expiresIn: any;
  constructor(opts: BlossomUploaderOpts);
  upload(file: File, opts?: {
    signal?: AbortSignal;
  }): Promise<[['url', string], ...string[][]]>;
  private static schema: any;
}
//# sourceMappingURL=BlossomUploader.d.ts.map