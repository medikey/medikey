import { NostrEvent, NostrFilter, NostrRelayCLOSED, NostrRelayCOUNT, NostrRelayEOSE, NostrRelayEVENT, NRelay } from "@jsr/nostrify__types";
import { Machina } from "../utils/Machina.js";
import { NSet } from "../NSet.js";
/** Mock relay for testing. */ export declare class MockRelay extends NSet implements NRelay {
  readonly subs: Map<string, {
    filters: NostrFilter[];
    machina: Machina<NostrEvent>;
  }>;
  req(filters: NostrFilter[], opts?: {
    signal?: AbortSignal;
  }): AsyncIterable<NostrRelayEVENT | NostrRelayEOSE | NostrRelayCLOSED>;
  event(event: NostrEvent): Promise<void>;
  query(filters: NostrFilter[]): Promise<NostrEvent[]>;
  remove(filters: NostrFilter[]): Promise<void>;
  count(filters: NostrFilter[]): Promise<NostrRelayCOUNT[2]>;
  close(): Promise<void>;
}
//# sourceMappingURL=MockRelay.d.ts.map