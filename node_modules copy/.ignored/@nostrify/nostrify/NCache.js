// deno-lint-ignore-file require-await
var _computedKey;
import { LRUCache } from "lru-cache";
import { matchFilters } from "nostr-tools";
import { NSet } from "./NSet.js";
_computedKey = Symbol.toStringTag;
/**
 * Nostr LRU cache based on [`npm:lru-cache`](https://www.npmjs.com/package/lru-cache).
 * It implements both `NStore` and `NSet` interfaces.
 *
 * ```ts
 * // Accepts the options of `npm:lru-cache`:
 * const cache = new NCache({ max: 1000 });
 *
 * // Events can be added like a regular `Set`:
 * cache.add(event1);
 * cache.add(event2);
 *
 * // Can be queried like `NStore`:
 * const events = await cache.query([{ kinds: [1] }]);
 *
 * // Can be iterated like `NSet`:
 * for (const event of cache) {
 *  console.log(event);
 * }
 * ```
 */ class NCache extends NSet {
  constructor(...args){
    super(new LRUCache(...args));
  }
  async event(event) {
    this.add(event);
  }
  async query(filters) {
    const events = [];
    for (const event of this){
      if (matchFilters(filters, event)) {
        this.cache.get(event.id);
        events.push(event);
      }
    }
    return events;
  }
  async remove(filters) {
    for (const event of this){
      if (matchFilters(filters, event)) {
        this.delete(event);
      }
    }
  }
  async count(filters) {
    const events = await this.query(filters);
    return {
      count: events.length,
      approximate: false
    };
  }
  [_computedKey] = 'NCache';
}
export { NCache };
//# sourceMappingURL=NCache.js.map